2015-01-07 13:31:11,739 [ INFO] (DVRSmain.java:146) - Logger Load Success!
2015-01-07 13:31:11,750 [ INFO] (DVRSmain.java:163) - DEFAULT_MCCMNC : default
DEFAULT_THRESHOLD : 5000.0
DEFAULT_DAY_THRESHOLD : 500.0
DEFAULT_DAYCAP : 300.0
DEFAULT_VOLUME_THRESHOLD : 1572864.0
DEFAULT_VOLUME_THRESHOLD2 : 2097152.0
DEFAULT_PHONE : 886989235253
RUN_INTERVAL : 180
TEST_MODE : true
dataThreshold : 800
exchangeRate : 4.0
kByte : 9.765625E-4

2015-01-07 13:31:11,963 [ INFO] (StdSchedulerFactory.java:1184) - Using default implementation for ThreadExecutor
2015-01-07 13:31:11,978 [ INFO] (SimpleThreadPool.java:268) - Job execution threads will use class loader of thread: main
2015-01-07 13:31:12,039 [ INFO] (SchedulerSignalerImpl.java:61) - Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2015-01-07 13:31:12,049 [ INFO] (QuartzScheduler.java:240) - Quartz Scheduler v.2.2.1 created.
2015-01-07 13:31:12,054 [ INFO] (RAMJobStore.java:155) - RAMJobStore initialized.
2015-01-07 13:31:12,058 [ INFO] (QuartzScheduler.java:305) - Scheduler meta-data: Quartz Scheduler (v2.2.1) 'DefaultQuartzScheduler' with instanceId 'NON_CLUSTERED'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 10 threads.
  Using job-store 'org.quartz.simpl.RAMJobStore' - which does not support persistence. and is not clustered.

2015-01-07 13:31:12,059 [ INFO] (StdSchedulerFactory.java:1339) - Quartz scheduler 'DefaultQuartzScheduler' initialized from default resource file in Quartz package: 'quartz.properties'
2015-01-07 13:31:12,060 [ INFO] (StdSchedulerFactory.java:1343) - Quartz scheduler version: 2.2.1
2015-01-07 13:31:12,100 [ INFO] (QuartzScheduler.java:575) - Scheduler DefaultQuartzScheduler_$_NON_CLUSTERED started.
2015-01-07 13:31:12,102 [DEBUG] (QuartzSchedulerThread.java:276) - batch acquisition of 1 triggers
2015-01-07 13:31:12,111 [DEBUG] (SimpleJobFactory.java:51) - Producing instance of Job 'group1.job1', class=program.DVRSmain
2015-01-07 13:31:12,126 [DEBUG] (JobRunShell.java:201) - Calling execute on job group1.job1
2015-01-07 13:31:12,129 [DEBUG] (QuartzSchedulerThread.java:276) - batch acquisition of 0 triggers
2015-01-07 13:31:12,134 [ INFO] (DVRSmain.java:2478) - RFP Program Start! Wed Jan 07 13:31:12 EST 2015
2015-01-07 13:31:12,135 [DEBUG] (Jatool.java:69) - Start to connect DB 
2015-01-07 13:31:12,990 [DEBUG] (Jatool.java:69) - Finished to connect DB 
2015-01-07 13:31:12,991 [ INFO] (DVRSmain.java:1158) - Connrct to jdbc:oracle:thin:@10.42.1.101:1521:S2TBSDEV  
2015-01-07 13:31:12,992 [DEBUG] (Jatool.java:69) - Start to connect DB 
2015-01-07 13:31:13,050 [DEBUG] (UpdateChecker.java:54) - Checking for available updated version of Quartz...
2015-01-07 13:31:13,183 [DEBUG] (Jatool.java:69) - Finished to connect DB 
2015-01-07 13:31:13,184 [ INFO] (DVRSmain.java:1194) - Connrct to jdbc:oracle:thin:@10.42.1.10:1521:orcl
2015-01-07 13:31:13,185 [DEBUG] (DVRSmain.java:2486) - connect success!
2015-01-07 13:31:13,186 [ INFO] (DVRSmain.java:1121) - cancelAutoCommit...
2015-01-07 13:31:13,187 [ INFO] (DVRSmain.java:1123) - set AutoCommit false!
2015-01-07 13:31:13,193 [ INFO] (DVRSmain.java:246) - setMonthDate...
2015-01-07 13:31:13,197 [ INFO] (DVRSmain.java:266) - setLastFileID...
2015-01-07 13:31:13,205 [DEBUG] (DVRSmain.java:272) - Execute SQL : SELECT MAX(A.LAST_FILEID) id FROM HUR_CURRENT A
2015-01-07 13:31:13,265 [ INFO] (DVRSmain.java:278) - Last process file ID :13857
2015-01-07 13:31:13,271 [ INFO] (DVRSmain.java:2499) - setLastFileID execute time :74
2015-01-07 13:31:13,272 [ INFO] (DVRSmain.java:301) - setCurrentMap...
2015-01-07 13:31:13,278 [DEBUG] (DVRSmain.java:310) - Execute SQL : SELECT A.IMSI,A.CHARGE,A.LAST_FILEID,A.SMS_TIMES,A.LAST_DATA_TIME,A.VOLUME,A.MONTH,A.EVER_SUSPEND,A.LAST_ALERN_THRESHOLD,A.LAST_ALERN_VOLUME FROM HUR_CURRENT A WHERE A.MONTH IN ('201501','201412') 
2015-01-07 13:31:13,308 [DEBUG] (DVRSmain.java:312) - Set current map...
2015-01-07 13:31:13,691 [ INFO] (DVRSmain.java:364) - setoldChargeMap...
2015-01-07 13:31:13,693 [ INFO] (DVRSmain.java:414) - setCurrentMapDay...
2015-01-07 13:31:13,694 [DEBUG] (DVRSmain.java:420) - Execute SQL : SELECT A.IMSI,A.CHARGE,A.LAST_FILEID,A.LAST_DATA_TIME,A.VOLUME,A.UPDATE_DATE,A.CREATE_DATE,A.MCCMNC,A.DAY,A.ALERT FROM HUR_CURRENT_DAY A WHERE SUBSTR(A.DAY,0,6) IN ('201501','201412') 
2015-01-07 13:31:14,096 [ INFO] (DVRSmain.java:2506) - setCurrentMap execute time :824
2015-01-07 13:31:14,097 [ INFO] (DVRSmain.java:538) - setThreshold...
2015-01-07 13:31:14,103 [DEBUG] (DVRSmain.java:545) - Execute SQL : SELECT A.IMSI,A.THRESHOLD FROM HUR_GPRS_THRESHOLD A 
2015-01-07 13:31:14,124 [DEBUG] (DVRSmain.java:548) - Set dataRate map...
2015-01-07 13:31:14,136 [ INFO] (DVRSmain.java:2511) - setThreshold execute time :39
2015-01-07 13:31:14,137 [ INFO] (DVRSmain.java:488) - setDataRate...
2015-01-07 13:31:14,143 [DEBUG] (DVRSmain.java:495) - Execute SQL : SELECT A.MCCMNC,A.RATE,A.CHARGEUNIT,A.CURRENCY,A.PRICEPLANID,A.DAYCAP FROM HUR_DATA_RATE A 
2015-01-07 13:31:14,166 [DEBUG] (DVRSmain.java:498) - Set dataRate map...
2015-01-07 13:31:15,303 [ INFO] (DVRSmain.java:2516) - setDataRate execute time :1166
2015-01-07 13:31:15,304 [ INFO] (DVRSmain.java:2080) - setMsisdnMap...
2015-01-07 13:31:15,311 [ INFO] (DVRSmain.java:2103) - Execute SQL :SELECT B.IMSI,A.SERVICECODE,A.PRICEPLANID,A.SUBSIDIARYID,(CASE A. STATUS WHEN '1' then to_char(C.value) when '3' then to_char( C.value) when '10' then to_char(C.value) else null end) NCODE FROM SERVICE A,IMSI B,PARAMETERVALUE C WHERE A.SERVICEID=B.SERVICEID AND A.SERVICECODE IS NOT NULL AND B.SERVICEID=C.SERVICEID(+) AND C.PARAMETERVALUEID(+)=3748
2015-01-07 13:31:35,589 [DEBUG] (QuartzSchedulerThread.java:276) - batch acquisition of 0 triggers
2015-01-07 13:31:35,839 [ INFO] (DVRSmain.java:2521) - setMsisdnMap execute time :20535
2015-01-07 13:31:35,840 [ INFO] (DVRSmain.java:571) - setIMSItoVLN...
2015-01-07 13:31:35,846 [DEBUG] (DVRSmain.java:579) - Execute SQL : SELECT A.VLR_NUMBER,A.IMSI FROM UTCN.BASICPROFILE A WHERE A.VLR_NUMBER is not null 
